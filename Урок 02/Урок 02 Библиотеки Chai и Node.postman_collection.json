{
	"info": {
		"_postman_id": "6a36b5ac-6dc9-4246-aeb8-52cd288f4a95",
		"name": "Урок 02 Библиотеки Chai и Node",
		"description": "## **Коллекция ДЗ Урок 2.** Библиотеки Chai.js и Node.js\n\n#### Задание 2.\n\n**JIRA**, метод _**Add comment**_. Создать комментарий к предварительно созданной или уже существующей задаче. Написать автотест, проверяющий текст статуса ответа (_Created_).\n\n##### Запрос задания:\n\n- **POST ДЗ 2 JIRA addComment Статус строкой Добавить комментарий к задаче**\n    \n\n#### Задание 3.\n\n**JIRA**, метод _**Add comment**_. Создать комментарий к предварительно созданной или уже существующей задаче. Написать автотест, проверяющий в ответе наличие заголовка **Content-Type** и его значение на соответствие следующему содержанию: _**application/json;charset=UTF-8**_. Дополнительно написать автотест, проверяющий наличие в значении заготовка **Content-Type** только _**application/json**_ (без указания кодировки).\n\n##### Запрос задания:\n\n- **POST ДЗ 3 JIRA addComment Проверка Content-Type и его значения**\n    \n\n#### Задание 4.\n\n**USERS**, метод _**MagicSearch**_. Проверить наличие в ответе сервера пользователя с фамилией _**Лунатиков**_: написать автотест, проверяющий статус-код ответа сервера на соответствие ожидаемому результату.\n\n##### Запрос задания:\n\n- **GET ДЗ 4 USERS magicSearch Найти генерального директора**\n    \n\n##### Примечание:\n\n1. Запросы к ресурсу **JIRA** требуют авторизации. Параметры авторизации хранятся и заполняются в глобальных переменных _**ATL_USERNAME**_ и _**ALT_PSW**_, метод авторизации в запросах - **Basic Auth**.\n2. Запросы в **ДЗ 2** и **3** требуют указания **ID** существующей задачи, к которой мы будем создавать комментарий. **ID** задачи передается в парметре запросов _**issueID**_. Значение этого параметра заполняется в переменной коллекции **issueID**.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23386398",
		"_collection_link": "https://lively-capsule-55441.postman.co/workspace/%25D0%2590%25D0%25B2%25D1%2582%25D0%25BE%25D0%25BC%25D0%25B0%25D1%2582%25D0%25B8%25D0%25B7%25D0%25B0%25D1%2586%25D0%25B8%25D1%258F-%25D1%2582%25D0%25B5%25D1%2581%25D1%2582%25D0%25BE%25D0%25B2-%25D0%25B4%25D0%25BB%25D1%258F-REST-A~f0af8592-a4dc-4fe3-aed5-135832153c62/collection/23386398-6a36b5ac-6dc9-4246-aeb8-52cd288f4a95?action=share&source=collection_link&creator=23386398"
	},
	"item": [
		{
			"name": "ДЗ",
			"item": [
				{
					"name": "ДЗ 2 JIRA addComment Статус строкой Добавить комментарий к задаче",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Комментарий к задаче добавлен [Код: 201 Статус: Created]\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"pm.test(\"Комментарий к задаче добавлен [Код: 201 Статус: Created]\", function () {\r",
									"    pm.response.to.have.status(\"Not Found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{ALT_PSW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{ATL_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"body\": {\r\n    \"type\": \"doc\",\r\n    \"version\": 1,\r\n    \"content\": [\r\n      {\r\n        \"type\": \"paragraph\",\r\n        \"content\": [\r\n          {\r\n            \"text\": \"Комментарий к задаче\",\r\n            \"type\": \"text\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_URL}}/issue/:issueID/comment",
							"host": [
								"{{JIRA_URL}}"
							],
							"path": [
								"issue",
								":issueID",
								"comment"
							],
							"variable": [
								{
									"key": "issueID",
									"value": "{{issueID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ДЗ 3 JIRA addComment Проверка Content-Type и его значения",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"В заголовке ответа представлен Content-Type и его значение application/json;charset=UTF-8\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=UTF-8\");\r",
									"});\r",
									"pm.test(\"В заголовке ответа представлен Content-Type и его значение application/json;charset=UTF-8 (Падение по заголовку)\", function () {\r",
									"    pm.response.to.have.header(\"Content\", \"application/json;charset=UTF-8\");\r",
									"});\r",
									"pm.test(\"В заголовке ответа представлен Content-Type и его значение application/json;charset=UTF-8 (Падение по значению)\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=UTF-88\");\r",
									"});\r",
									"\r",
									"/////////////////////////////////\r",
									"\r",
									"pm.test(\"В заголовке ответа представлен Content-Type и его значение application/json;charset=UTF-8 Отдельная проверка существования заголовка и его значения\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json;charset=UTF-8\");\r",
									"\r",
									"});\r",
									"pm.test(\"В заголовке ответа представлен Content-Type и его значение application/json;charset=UTF-8 Отдельная проверка существования заголовка и его значения (Падение по наличию заголовка)\", function () {\r",
									"    pm.response.to.have.header(\"Content-Typet\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json;charset=UTF-8\");\r",
									"\r",
									"});\r",
									"pm.test(\"В заголовке ответа представлен Content-Type и его значение application/json;charset=UTF-8 Отдельная проверка существования заголовка и его значения (Падение по значению)\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json;charset=UTF-88\");\r",
									"\r",
									"});\r",
									"\r",
									"////////////////////////////////\r",
									"\r",
									"pm.test(\"В заголовке ответа представлен Content-Type и его значение application/json Проверка регулярным выражением типа заголовка (без кодировки)\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).match(/^application\\/json/i);\r",
									"\r",
									"});\r",
									"pm.test(\"В заголовке ответа представлен Content-Type и его значение application/json Проверка регулярным выражением типа заголовка (без кодировки, изменяем регистр)\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).match(/^Application\\/Json/i); // изменяем регистр - для RegExp не чувствительно\r",
									"\r",
									"});\r",
									"pm.test(\"В заголовке ответа представлен Content-Type и его значение application/json Проверка регулярным выражением типа заголовка (без кодировки) Падение\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).match(/^Application\\/Jsn/i); // Намеренная ошибка, проверяем падение теста\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{ALT_PSW}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{ATL_USERNAME}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"body\": {\r\n    \"type\": \"doc\",\r\n    \"version\": 1,\r\n    \"content\": [\r\n      {\r\n        \"type\": \"paragraph\",\r\n        \"content\": [\r\n          {\r\n            \"text\": \"Комментарий №7 к задаче TEST-18205\",\r\n            \"type\": \"text\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{JIRA_URL}}/issue/:issueID/comment",
							"host": [
								"{{JIRA_URL}}"
							],
							"path": [
								"issue",
								":issueID",
								"comment"
							],
							"variable": [
								{
									"key": "issueID",
									"value": "{{issueID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ДЗ 4 USERS magicSearch Найти генерального директора",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Генеральный директор найден по фамилии (код \" + pm.response.code + \")\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([231,232,235]);\r",
									"});\r",
									"pm.test(\"Генеральный директор найден по фамилии (код \" + pm.response.code + \")\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([731,732,735]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"query\":\"Лунатиков\",\r\n\"fullSimilarity\":false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{USERS_URL}}/magicsearch",
							"host": [
								"{{USERS_URL}}"
							],
							"path": [
								"magicsearch"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "issueID",
			"value": "TEST-20256",
			"type": "string"
		}
	]
}